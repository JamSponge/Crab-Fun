<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sPlayer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oCamera</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Movement Speed When Shooting


//SPEEDS
    //Movement Speed When Shooting
    ShootingSpeed = 0
    MyBulletSpeed = 1000 / room_speed
    PlayerSpeed = 500 / room_speed - ShootingSpeed
    MyGunBombSpeed = 1500/room_speed


//SHOOTING SETUP
    CanShoot=true
    BombGunTimer=0
    BombGunThrown = false
   
    
    //RATE OF FIRE
    TimeSinceLastShot = 0
    TimeBetweenShots = 1
    
  
   
    
    //STRESS COOLDOWN - NUMBERS USED IN CAMERA SETUP, SORRY
    ShotsFiredCount = 0
    ShotsFiredCountMax = 12
    ShotsFiredCannotShoot = 9
    ShotsFiredReloadPoint = 6
    
    TimeSinceLastShot = 0
    CameraSnapSpeed = 20
    TimeSinceMouseReleased = 0
    
    //BULLET BAR
     BulletBarAlpha = 0.05
     BulletBarScale = 0.2
     BulletBarRotation = 0.1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*movement*/

if keyboard_check(ord('W')) {
    y=y-PlayerSpeed
}
if keyboard_check(ord('A')){
x = x - PlayerSpeed
}
if keyboard_check(ord('S')){
y = y + PlayerSpeed
}
if keyboard_check(ord('D')){
x = x + PlayerSpeed
}
//BULLET WHEEL PROPERTIES
    //SHOOTING
    if mouse_check_button(mb_left) or  mouse_check_button_pressed(mb_left){
    BulletBarAlpha += (1 - BulletBarAlpha) *0.1;
    BulletBarScale += (0.4 - BulletBarScale) *0.05;
    BulletBarRotation += (1 - BulletBarRotation) *0.2;
    }
    //COOLDOWN
    if !mouse_check_button(mb_left) or mouse_check_button_released(mb_left) {
    BulletBarAlpha += (0 - BulletBarAlpha) *0.01;
    BulletBarScale += (0 - BulletBarScale) *0.05;
    BulletBarRotation += (35 - BulletBarRotation) *0.5;
    }
    //MAXMIN VARIABLES
    if BulletBarAlpha &gt;=1{BulletBarAlpha=1}
    if BulletBarAlpha &lt;=0.05{BulletBarAlpha=0.05}
    if BulletBarScale &gt;= 0.4{BulletBarScale=0.4}
    if BulletBarScale &lt;= 0.2{BulletBarScale=0.2}
    if BulletBarRotation &gt;= 35{BulletBarRotation = 35}
    if BulletBarRotation &lt;= 1{BulletBarRotation = 1}
    
//SHOOTING MOVING SPEED

if mouse_check_button(mb_left) {
ShootingSpeed = 250 / room_speed
}
if mouse_check_button_released(mb_left) {
ShootingSpeed = 0
}

/*facing*/

image_angle = point_direction(x,y,mouse_x,mouse_y) 

//AudioPerspective
audio_listener_position(x,y,0)
    
/*shooting*/
    //Check Time Since Last Shot
    TimeSinceLastShot = TimeSinceLastShot +4/room_speed
    //Check If You Can Shoot &amp; Play Sound etc if TRUE
    if ShotsFiredCount = ShotsFiredReloadPoint and CanShoot=false {CanShoot=true audio_play_sound(aGunReload,1,0)
    BulletBarAlpha = BulletBarAlpha + 1
    }
        //Timercheck &amp; CANNOT Shoot!
        if mouse_check_button(mb_left) and TimeSinceLastShot &gt;= TimeBetweenShots and CanShoot=(false){
        audio_play_sound(aPlayerShootClick,100,false)
        ShotsFiredCount = ShotsFiredCount + 1
        TimeSinceMouseReleased = 0
        TimeSinceLastShot = 0
        }
        //TimerCheck &amp; CAN Shoot
        if mouse_check_button(mb_left) and TimeSinceLastShot &gt;= TimeBetweenShots and CanShoot=(true) {
        TimeSinceMouseReleased = 0
        MyBullet = instance_create(x + lengthdir_x(80, image_angle), y + lengthdir_y(80, image_angle),oBullet)
            
            audio_play_sound(aPlayerShoot,100,false)
            MyBullet.direction = image_angle
            MyBullet.speed = MyBulletSpeed
            MyBullet.image_angle = image_angle
    //Check Stress Level, then increase stress
    ShotsFiredCount = ShotsFiredCount + 1
    //RESET TIMER
        TimeSinceLastShot = 0
        }
    //Shots Fired Hits Max!
    if ShotsFiredCount &gt; ShotsFiredCannotShoot{
    CanShoot=false}
    if ShotsFiredCount &gt; ShotsFiredCountMax{
    ShotsFiredCount = ShotsFiredCountMax
    }
        
    //Code to stop people from tapping button!
     if !mouse_check_button(mb_left){
     TimeSinceMouseReleased =  TimeSinceMouseReleased +1/room_speed
    }

    //MAXED GUN, THROW TO EXPLODE!
    if mouse_check_button(mb_right) /*and ShotsFiredCount = ShotsFiredCountMax and BombGunThrown = false*/{
    BombGunTimer = BombGunTimer +1/room_speed
    BombGunThrown = true
    MyGunBomb = instance_create(x + lengthdir_x(80, image_angle), y + lengthdir_y(80, image_angle),oExplodeGun)
            
            audio_play_sound(aPlayerShoot,100,false)
            MyGunBomb.direction = image_angle
            MyGunBomb.speed = MyGunBombSpeed
    }
    
    if ShotsFiredCount &lt;= 0 {ShotsFiredCount =0}
    
        
//DEATH

if instance_place (x,y,oEnemy){
PlayerDies()
}

/*BulletKick = 100 / room_speed
BulletKickDir = image_angle +180
 
x = x +lengthdir_x(BulletKick,BulletKickDir)
y = y +lengthdir_y(BulletKick,BulletKickDir)
}
*/

//EDGE OF ARENA
if x &lt; 500 { x = 500}
if y &lt; 500 { y = 500}
if x &gt; room_width-500 { x = room_width-500}
if y &gt; room_height-500 { y = room_height-500}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
