<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sSmallBits</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>GREENSPLATS</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_xscale = (image_xscale)*random(2) 
image_yscale = image_xscale

if image_xscale &lt;1 { image_xscale =1}
BitOriginX = x
BitOriginY = y
SplattedYet=false
SplatVarX = random_range(50,70)
SplatVarY = random_range(100,150)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_angle = direction
Deceleration = 100/random(100)

if speed &gt; Deceleration {
speed = speed-(Deceleration/room_speed)
} else{ speed=0}

if speed &gt; 0 {
image_xscale = image_xscale+(distance_to_point (BitOriginX, BitOriginY)/SplatVarX)
image_xscale = image_yscale+(distance_to_point (BitOriginX, BitOriginY)/SplatVarY)
}

if distance_to_point (BitOriginX, BitOriginY) &gt; 50 {
speed =0
}

if image_xscale &gt; 5 { image_xscale = 5}

if speed=0 and SplattedYet=false {
image_xscale=image_xscale*1.3
image_yscale=image_yscale*1.3
SplattedYet=true
}

DeathFade()
/*SPLATSTRETCH
SplatterStretch = 0
SplatterStretchMax = 5
if speed &lt;10 while SplatterStretch &lt; SplatterStretchMax {
SplatterStretch = SplatterStretch+1
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
