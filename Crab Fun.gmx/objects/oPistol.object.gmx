<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//ADD WEAPON TO ARRAY
WeaponPickedUp()

//GENERIC WEAPON SETUP - NO NEED TO EVER CHANGE
CanShoot=true
ShotsFiredCount = 0
TimeSinceLastShot = 0
TimeBetweenShots = 1
TimeSinceMouseReleased = 0
DrawAimingBeam = false
GunBombCharging = false

//GENERIC WEAPON SETUP - VARIABLES
ShotsFiredCountMax = 10
MyBulletSpeed = 3500 / room_speed
RateOfFire = 0.2 //---IN SECONDS

//AUDIO
GunShootSFX = choose (sPistol1,sPistol2,sPistol3,sPistol4) //ALSO IN PistolProjectileCreation SCRIPT
GunShootSFXLow3 = sPistolLow0
GunShootSFXLow2 = sPistolLow1
GunShootSFXLow1 = sPistolLow2
OutOfAmmoSFX = aPlayerShootClick

//VISUAL
MuzzleFlareType = oMuzzleFlare
BulletType = oBullet2
BulletBeamType = oBulletBeam
ImpactAnimationType = oPistolShotImpact

//GUN-FEEL
WeaponScreenShake = global.DisplayRatio*12

    //WEAPON-SPECIFIC SETUP
    
    //EXPLODYTIMES
    MyGunBombSpeed = 2000/room_speed
    BombGunThrown = false
    WeaponMinExplodeSize = 0.1
    WeaponMaxExplodeSize = 2
    WeaponExplodeSizeGrowthRate = 0.002
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists (oPlayer)
    {
    
    x = Owner.x
    y = Owner.y
    image_angle = Owner.Facing
    
    if Owner.Weapon[Owner.WeaponArrayIndex] = self.id{
    
    //SHOOTING THE GUN
    //Check Time Since Last Shot
    TimeSinceLastShot = TimeSinceLastShot +1/room_speed
    //Timercheck &amp; CANNOT Shoot!
    if mouse_check_button(mb_left) and TimeSinceLastShot &gt;= RateOfFire and CanShoot=(false){
    audio_play_sound(OutOfAmmoSFX,100,false)
    ShotsFiredCount = ShotsFiredCount + 1
    TimeSinceMouseReleased = 0
    TimeSinceLastShot = 0
    }
    //TimerCheck &amp; CAN Shoot
    if mouse_check_button(mb_left) and TimeSinceLastShot &gt;= RateOfFire and CanShoot=(true) 
        {
        TimeSinceMouseReleased = 0
            
        //CREATE A PROJECTILE POW POW POW
        PistolProjectileCreation()
                    
        //INCREASE NUMBER OF SHOTS FIRED
        ShotsFiredCount = ShotsFiredCount + 1
        //RESET TIMER
        TimeSinceLastShot = 0
        }
    //Shots Fired Hits Max!
    if ShotsFiredCount &gt;= ShotsFiredCountMax{
    ShotsFiredCount = ShotsFiredCountMax
    CanShoot=false
    }
            
    //Code to stop people from tapping button!
    if !mouse_check_button(mb_left){
    TimeSinceMouseReleased =  TimeSinceMouseReleased +1/room_speed
    }
    if ShotsFiredCount &lt;= 0 {ShotsFiredCount =0}
        
        
    //MAXED GUN, THROW TO EXPLODE!
    if BombGunThrown = false
    {
    
    if mouse_check_button_pressed(mb_right)
    {
    GunBombCharging = true
    //PASS DATA ONTO CROSSHAIR, IN CASE PISTOL GOES AWAY FOR SOME REASON??
    //HOW BIG IS THIS "BIG BOOM" GOING TO BE, SIR?
    ExplosionSize = ShotsFiredCount/ShotsFiredCountMax; if ExplosionSize &lt;WeaponMinExplodeSize {ExplosionSize = WeaponMinExplodeSize}
    //SWITCH ON BEAM GRAPHICS &amp; PREP IT ETC
    oCrossHair.DrawAimingBeam = true
    //PUT IMPACT TRACKER IN ROUGHLY THE RIGHT PLACE
    oImpactTracker.x = x
    oImpactTracker.y = y
    }
    
    //HOLD DOWN, INCREASE BOMB SIZE
    if mouse_check_button(mb_right) 
    {
        if GunBombCharging = true
        {
        ExplosionSize += (WeaponMaxExplodeSize - ExplosionSize) *WeaponExplodeSizeGrowthRate;
        if WeaponMaxExplodeSize &lt; ExplosionSize {ExplosionSize = WeaponMaxExplodeSize}
        oCrossHair.ExplosionSize = ExplosionSize
        } 
        else
        {
        GunBombCharging = true
        //THIS IS DUPLICATE OF STUFF ABOVE - PROBABLY SCRIPT AT SOME POINT, MATEY
        //HOW BIG IS THIS "BIG BOOM" GOING TO BE, SIR?
        ExplosionSize = ShotsFiredCount/ShotsFiredCountMax; if ExplosionSize &lt;WeaponMinExplodeSize {ExplosionSize = WeaponMinExplodeSize}
        //SWITCH ON BEAM GRAPHICS &amp; PREP IT ETC
        oCrossHair.DrawAimingBeam = true
        //PUT IMPACT TRACKER IN ROUGHLY THE RIGHT PLACE
        oImpactTracker.x = x
        oImpactTracker.y = y
        }
    }

        //RELEASE AND FIRE IT
        if mouse_check_button_released(mb_right)
        {
        GunBombCharging = false
        BombGunThrown = true
        ShotsFiredCount = 0
        CanShoot = true
        MyGunBomb = instance_create(x + lengthdir_x(80, image_angle), y + lengthdir_y(80, image_angle),oExplodeGun)
                
        audio_play_sound(aPlayerShoot,100,false)
        MyGunBomb.direction = image_angle
        MyGunBomb.speed = MyGunBombSpeed
        MyGunBomb.ExplosionSize = ExplosionSize
        
            //SWITCH OFF LASER AIM BEAM SHIT
            with (oCrossHair)
            {
            DrawAimingBeam=false
            PowerBarXScale=0
            PowerBarYScale=0
            PowerBarAlpha=0
            }
        }
        
    
    }
    }
    }
    else {}
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(oPlayer){

if Owner.Weapon[Owner.WeaponArrayIndex] = self.id{
draw_sprite_ext(sBulletBar, ((ShotsFiredCount/ShotsFiredCountMax)*100)/5, oPlayer.x, oPlayer.y, oPlayer.BulletBarScale, oPlayer.BulletBarScale, oPlayer.BulletBarRotation,-1,oPlayer.BulletBarAlpha);
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
