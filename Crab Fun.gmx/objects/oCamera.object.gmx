<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite36</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>100</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Camera Setup
ZoomLevel = 0
ZoomMax=600
ScreenWidth = display_get_width()
ScreenHeight = display_get_height()

//DRAW LEVEL setup
LevelExists=false

//CAMERA SHAKE
screenshake = false
bonusscreenshake = 0
KillerTracker = 0

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>bonusscreenshake = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>screenshake=false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//PLAYER CAMERA ACTIVE
if instance_exists(oPlayer)
{

//CAMERA CONTROLS V1.4

//ZOOM WHEN SHOOTING
    ZoomLevelW = ScreenWidth/1000*ZoomLevel
    ZoomLevelH = ScreenHeight/1000*ZoomLevel
    
    CurrentMaxX = ScreenWidth-ZoomLevelW
    CurrentMaxY = ScreenHeight-ZoomLevelH
    view_wview = CurrentMaxX
    view_hview = CurrentMaxY
    
    //ZOOM IN WITH SHOOTING
    if mouse_check_button(mb_left)
        {
        ZoomLevel += (ZoomMax - ZoomLevel) *0.01;
        }
    
    //ZOOM OUT, GUN EXPLODE!
    if mouse_check_button(mb_right)
        {
        ZoomLevel += (0 - ZoomLevel) *0.05;
        }
    
    //CAM CONTROL PARAMETERS
    if  ZoomLevel &gt;= ZoomMax
        {
        ZoomLevel = ZoomMax
        }
    if ZoomLevel &lt;=0
        {
        ZoomLevel = 0
        }

//SMOOTH CAMERA FOLLOW
var targetX,targetY,xx,yy;
targetX=oPlayer.x;
targetY=oPlayer.y;
xx=x
yy=y

x += (targetX - xx) *0.05;
y += (targetY - yy) *0.05;        
        
//FIX CAMERA BOUNDS
if view_wview &gt;= ScreenWidth*1.5
    {
    view_wview = ScreenWidth*1.5
    }
if view_hview &gt;= ScreenHeight*1.5
    {
    view_hview = ScreenHeight*1.5
    }

}   
    
else if KillerTracker != 0
    {
    CameraReset()
    var Target,xx,yy;
Target = instance_nearest(x,y,oEnemy)

xx=x
yy=y

x += (Target.x - xx) *0.1;
y += (Target.y - yy) *0.1;   
    }

else 
{
/* how much of the room do we want on-screen?*/
view_wview = ScreenWidth
view_hview = ScreenHeight

/* how much of the screen do we want to take up?*/
view_wport = ScreenWidth
view_hport = ScreenHeight
}



//SCREENSHAKE EFFECTS
if screenshake=true 
{ScreenShake(ShakeAmount)}


if LevelExists
{
//SETUP FOR DRAW LIMITS
NearestGridCellX = round(x div 128)
NearestGridCellY = round(y div 128)

GridColDrawStart = NearestGridCellX-10
GridColDrawEnd = NearestGridCellX+10
GridRowDrawStart = NearestGridCellY-7
GridRowDrawEnd = NearestGridCellY+7

if GridRowDrawStart &lt;= 0 {GridRowDrawStart=0}
if GridColDrawStart &lt;= 0 {GridColDrawStart=0}
if ds_grid_width(grid) &lt;= GridColDrawEnd {GridColDrawEnd=ds_grid_width(grid)}
if ds_grid_height(grid) &lt;= GridRowDrawEnd {GridRowDrawEnd=ds_grid_height(grid)}
}

/*DEBUG VIEW MODE
  view_wview = room_width
  view_hview = room_height


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if LevelExists
{

    for (var row=GridRowDrawStart; row&lt;GridRowDrawEnd; row++)
    {
            for (var col=GridColDrawStart; col&lt;GridColDrawEnd; col++)
            {  
            //ONLY PLACE TILES IN SPACES
            if grid[# col, row] = -2
            {}
            else 
            {
            var subimage = grid[# col, row] 
            draw_sprite(spr_leveltiles,subimage, round((col*128)+64), round((row*128)+64));
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
