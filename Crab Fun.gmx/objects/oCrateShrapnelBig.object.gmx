<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sCrateShrapnelBig</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//CHOOSE IMAGE TO USE FOR SHRAPNEL
var AnimationFrameToUse = random_range(0,2)
image_speed = 0
image_index = AnimationFrameToUse

//DEFINE DIRECTION, SPIN LENGTH, SIZE
SpinLength = random_range (0.05,0.9)
SpinTime = 0
image_angle = random_range (20,360)
HasHitEnemy=false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>DeathFade()

//SPINNY!
if speed &gt; 15{
SpinTime = SpinTime + 0.7/room_speed
if SpinTime &lt; SpinLength{
  image_angle += (0 - 360) *random_range(0.001,0.02);
  }
  }
//DECELERATE &amp; STOP
speed += (0 - speed) *0.1;

//BOUNCE OFF ENEMIES - slight speed bump and random direction bounce for the lols
while place_meeting(x+hspeed,y+vspeed,oEnemyBody) and HasHitEnemy=false{
vspeed = vspeed *-1
hspeed = hspeed *-1

//COLLIDED!
HasHitEnemy=true
}

//BOUNCE OFF WALLS - no speed bump, consistent bounce direction
move_bounce_solid(false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
